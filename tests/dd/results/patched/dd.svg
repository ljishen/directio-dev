<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>cpuidle_enter (191 samples, 78.28%)</title><rect x="218.0" y="357" width="923.6" height="15.0" fill="rgb(216,180,40)" rx="2" ry="2" />
<text  x="220.95" y="367.5" >cpuidle_enter</text>
</g>
<g >
<title>_perf_event_enable (5 samples, 2.05%)</title><rect x="155.1" y="213" width="24.2" height="15.0" fill="rgb(251,229,2)" rx="2" ry="2" />
<text  x="158.08" y="223.5" >_..</text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.29 (2 samples, 0.82%)</title><rect x="179.3" y="341" width="9.6" height="15.0" fill="rgb(213,197,42)" rx="2" ry="2" />
<text  x="182.26" y="351.5" ></text>
</g>
<g >
<title>smp_call_function_single (5 samples, 2.05%)</title><rect x="155.1" y="181" width="24.2" height="15.0" fill="rgb(239,120,52)" rx="2" ry="2" />
<text  x="158.08" y="191.5" >s..</text>
</g>
<g >
<title>native_write_msr (4 samples, 1.64%)</title><rect x="1161.0" y="101" width="19.3" height="15.0" fill="rgb(231,153,6)" rx="2" ry="2" />
<text  x="1163.98" y="111.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (1 samples, 0.41%)</title><rect x="150.2" y="261" width="4.9" height="15.0" fill="rgb(208,107,28)" rx="2" ry="2" />
<text  x="153.25" y="271.5" ></text>
</g>
<g >
<title>perf_evlist__disable (1 samples, 0.41%)</title><rect x="150.2" y="341" width="4.9" height="15.0" fill="rgb(246,89,46)" rx="2" ry="2" />
<text  x="153.25" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 1.64%)</title><rect x="159.9" y="85" width="19.4" height="15.0" fill="rgb(211,220,39)" rx="2" ry="2" />
<text  x="162.92" y="95.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (1 samples, 0.41%)</title><rect x="39.0" y="293" width="4.9" height="15.0" fill="rgb(253,18,25)" rx="2" ry="2" />
<text  x="42.02" y="303.5" ></text>
</g>
<g >
<title>iomap_file_buffered_write (1 samples, 0.41%)</title><rect x="184.1" y="149" width="4.8" height="15.0" fill="rgb(251,214,41)" rx="2" ry="2" />
<text  x="187.10" y="159.5" ></text>
</g>
<g >
<title>read (14 samples, 5.74%)</title><rect x="19.7" y="437" width="67.7" height="15.0" fill="rgb(242,62,3)" rx="2" ry="2" />
<text  x="22.67" y="447.5" >read</text>
</g>
<g >
<title>ext4_writepages (1 samples, 0.41%)</title><rect x="34.2" y="325" width="4.8" height="15.0" fill="rgb(251,224,30)" rx="2" ry="2" />
<text  x="37.18" y="335.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.82%)</title><rect x="39.0" y="325" width="9.7" height="15.0" fill="rgb(223,107,20)" rx="2" ry="2" />
<text  x="42.02" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.41%)</title><rect x="222.8" y="293" width="4.8" height="15.0" fill="rgb(228,118,19)" rx="2" ry="2" />
<text  x="225.79" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.41%)</title><rect x="126.1" y="325" width="4.8" height="15.0" fill="rgb(231,71,47)" rx="2" ry="2" />
<text  x="129.07" y="335.5" ></text>
</g>
<g >
<title>__vfs_write (2 samples, 0.82%)</title><rect x="179.3" y="213" width="9.6" height="15.0" fill="rgb(248,178,9)" rx="2" ry="2" />
<text  x="182.26" y="223.5" ></text>
</g>
<g >
<title>do_writepages (1 samples, 0.41%)</title><rect x="179.3" y="101" width="4.8" height="15.0" fill="rgb(251,114,11)" rx="2" ry="2" />
<text  x="182.26" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 2.05%)</title><rect x="155.1" y="309" width="24.2" height="15.0" fill="rgb(221,225,23)" rx="2" ry="2" />
<text  x="158.08" y="319.5" >e..</text>
</g>
<g >
<title>intel_idle (1 samples, 0.41%)</title><rect x="1185.2" y="277" width="4.8" height="15.0" fill="rgb(209,184,6)" rx="2" ry="2" />
<text  x="1188.16" y="287.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.41%)</title><rect x="1146.5" y="357" width="4.8" height="15.0" fill="rgb(230,99,35)" rx="2" ry="2" />
<text  x="1149.48" y="367.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 1.64%)</title><rect x="1161.0" y="117" width="19.3" height="15.0" fill="rgb(238,185,25)" rx="2" ry="2" />
<text  x="1163.98" y="127.5" ></text>
</g>
<g >
<title>perf (8 samples, 3.28%)</title><rect x="150.2" y="453" width="38.7" height="15.0" fill="rgb(254,124,42)" rx="2" ry="2" />
<text  x="153.25" y="463.5" >perf</text>
</g>
<g >
<title>run_rebalance_domains (4 samples, 1.64%)</title><rect x="227.6" y="261" width="19.4" height="15.0" fill="rgb(254,197,44)" rx="2" ry="2" />
<text  x="230.62" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable (88 samples, 36.07%)</title><rect x="251.8" y="197" width="425.6" height="15.0" fill="rgb(238,120,0)" rx="2" ry="2" />
<text  x="254.80" y="207.5" >x86_pmu_enable</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.41%)</title><rect x="222.8" y="245" width="4.8" height="15.0" fill="rgb(247,113,11)" rx="2" ry="2" />
<text  x="225.79" y="255.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.41%)</title><rect x="193.8" y="341" width="4.8" height="15.0" fill="rgb(222,104,2)" rx="2" ry="2" />
<text  x="196.77" y="351.5" ></text>
</g>
<g >
<title>do_idle (6 samples, 2.46%)</title><rect x="1161.0" y="341" width="29.0" height="15.0" fill="rgb(254,47,5)" rx="2" ry="2" />
<text  x="1163.98" y="351.5" >do..</text>
</g>
<g >
<title>poll_idle (1 samples, 0.41%)</title><rect x="1127.1" y="325" width="4.9" height="15.0" fill="rgb(226,121,17)" rx="2" ry="2" />
<text  x="1130.13" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 5.33%)</title><rect x="24.5" y="405" width="62.9" height="15.0" fill="rgb(222,145,42)" rx="2" ry="2" />
<text  x="27.51" y="415.5" >do_sys..</text>
</g>
<g >
<title>perf_ioctl (1 samples, 0.41%)</title><rect x="150.2" y="245" width="4.9" height="15.0" fill="rgb(253,10,22)" rx="2" ry="2" />
<text  x="153.25" y="255.5" ></text>
</g>
<g >
<title>ftrace_ops_assist_func (2 samples, 0.82%)</title><rect x="135.7" y="357" width="9.7" height="15.0" fill="rgb(242,36,51)" rx="2" ry="2" />
<text  x="138.74" y="367.5" ></text>
</g>
<g >
<title>xfs_file_fsync (1 samples, 0.41%)</title><rect x="179.3" y="149" width="4.8" height="15.0" fill="rgb(212,93,44)" rx="2" ry="2" />
<text  x="182.26" y="159.5" ></text>
</g>
<g >
<title>rebalance_domains (4 samples, 1.64%)</title><rect x="227.6" y="245" width="19.4" height="15.0" fill="rgb(212,109,26)" rx="2" ry="2" />
<text  x="230.62" y="255.5" ></text>
</g>
<g >
<title>rest_init (6 samples, 2.46%)</title><rect x="1161.0" y="373" width="29.0" height="15.0" fill="rgb(233,218,7)" rx="2" ry="2" />
<text  x="1163.98" y="383.5" >re..</text>
</g>
<g >
<title>vfs_write (2 samples, 0.82%)</title><rect x="179.3" y="229" width="9.6" height="15.0" fill="rgb(238,53,12)" rx="2" ry="2" />
<text  x="182.26" y="239.5" ></text>
</g>
<g >
<title>iomap_write_actor (1 samples, 0.41%)</title><rect x="184.1" y="117" width="4.8" height="15.0" fill="rgb(234,22,45)" rx="2" ry="2" />
<text  x="187.10" y="127.5" ></text>
</g>
<g >
<title>_perf_event_disable (1 samples, 0.41%)</title><rect x="150.2" y="213" width="4.9" height="15.0" fill="rgb(241,166,9)" rx="2" ry="2" />
<text  x="153.25" y="223.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 1.64%)</title><rect x="1161.0" y="245" width="19.3" height="15.0" fill="rgb(234,129,47)" rx="2" ry="2" />
<text  x="1163.98" y="255.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.41%)</title><rect x="126.1" y="309" width="4.8" height="15.0" fill="rgb(215,209,15)" rx="2" ry="2" />
<text  x="129.07" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.82%)</title><rect x="179.3" y="277" width="9.6" height="15.0" fill="rgb(227,154,9)" rx="2" ry="2" />
<text  x="182.26" y="287.5" ></text>
</g>
<g >
<title>page_cache_async_readahead (4 samples, 1.64%)</title><rect x="63.2" y="293" width="19.3" height="15.0" fill="rgb(240,48,41)" rx="2" ry="2" />
<text  x="66.20" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 1.64%)</title><rect x="227.6" y="277" width="19.4" height="15.0" fill="rgb(232,128,51)" rx="2" ry="2" />
<text  x="230.62" y="287.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.41%)</title><rect x="222.8" y="213" width="4.8" height="15.0" fill="rgb(219,61,38)" rx="2" ry="2" />
<text  x="225.79" y="223.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.41%)</title><rect x="1132.0" y="309" width="4.8" height="15.0" fill="rgb(230,131,27)" rx="2" ry="2" />
<text  x="1134.97" y="319.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.41%)</title><rect x="159.9" y="37" width="4.9" height="15.0" fill="rgb(253,11,27)" rx="2" ry="2" />
<text  x="162.92" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 5.33%)</title><rect x="24.5" y="421" width="62.9" height="15.0" fill="rgb(239,205,43)" rx="2" ry="2" />
<text  x="27.51" y="431.5" >entry_..</text>
</g>
<g >
<title>security_file_permission (1 samples, 0.41%)</title><rect x="126.1" y="341" width="4.8" height="15.0" fill="rgb(246,4,15)" rx="2" ry="2" />
<text  x="129.07" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 1.23%)</title><rect x="164.8" y="37" width="14.5" height="15.0" fill="rgb(229,150,39)" rx="2" ry="2" />
<text  x="167.75" y="47.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.41%)</title><rect x="1146.5" y="373" width="4.8" height="15.0" fill="rgb(254,157,16)" rx="2" ry="2" />
<text  x="1149.48" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 2.05%)</title><rect x="155.1" y="293" width="24.2" height="15.0" fill="rgb(232,85,13)" rx="2" ry="2" />
<text  x="158.08" y="303.5" >d..</text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.41%)</title><rect x="1146.5" y="341" width="4.8" height="15.0" fill="rgb(248,103,49)" rx="2" ry="2" />
<text  x="1149.48" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (2 samples, 0.82%)</title><rect x="1151.3" y="373" width="9.7" height="15.0" fill="rgb(220,37,35)" rx="2" ry="2" />
<text  x="1154.31" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (9 samples, 3.69%)</title><rect x="677.4" y="277" width="43.5" height="15.0" fill="rgb(205,53,41)" rx="2" ry="2" />
<text  x="680.38" y="287.5" >tick..</text>
</g>
<g >
<title>xfs_do_writepage (1 samples, 0.41%)</title><rect x="179.3" y="53" width="4.8" height="15.0" fill="rgb(252,163,15)" rx="2" ry="2" />
<text  x="182.26" y="63.5" ></text>
</g>
<g >
<title>cpu_startup_entry (6 samples, 2.46%)</title><rect x="1161.0" y="357" width="29.0" height="15.0" fill="rgb(237,146,25)" rx="2" ry="2" />
<text  x="1163.98" y="367.5" >cp..</text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.41%)</title><rect x="261.5" y="149" width="4.8" height="15.0" fill="rgb(247,106,10)" rx="2" ry="2" />
<text  x="264.48" y="159.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 2.05%)</title><rect x="1161.0" y="261" width="24.2" height="15.0" fill="rgb(211,5,49)" rx="2" ry="2" />
<text  x="1163.98" y="271.5" >s..</text>
</g>
<g >
<title>nmi (1 samples, 0.41%)</title><rect x="77.7" y="165" width="4.8" height="15.0" fill="rgb(216,2,6)" rx="2" ry="2" />
<text  x="80.70" y="175.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 1.64%)</title><rect x="1161.0" y="213" width="19.3" height="15.0" fill="rgb(223,116,20)" rx="2" ry="2" />
<text  x="1163.98" y="223.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.82%)</title><rect x="188.9" y="389" width="9.7" height="15.0" fill="rgb(244,80,24)" rx="2" ry="2" />
<text  x="191.93" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.41%)</title><rect x="222.8" y="277" width="4.8" height="15.0" fill="rgb(212,121,15)" rx="2" ry="2" />
<text  x="225.79" y="287.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1 samples, 0.41%)</title><rect x="150.2" y="229" width="4.9" height="15.0" fill="rgb(226,16,42)" rx="2" ry="2" />
<text  x="153.25" y="239.5" ></text>
</g>
<g >
<title>start_kernel (6 samples, 2.46%)</title><rect x="1161.0" y="389" width="29.0" height="15.0" fill="rgb(251,51,45)" rx="2" ry="2" />
<text  x="1163.98" y="399.5" >st..</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 1.64%)</title><rect x="159.9" y="69" width="19.4" height="15.0" fill="rgb(215,56,7)" rx="2" ry="2" />
<text  x="162.92" y="79.5" ></text>
</g>
<g >
<title>xfs_file_write_iter (2 samples, 0.82%)</title><rect x="179.3" y="181" width="9.6" height="15.0" fill="rgb(221,209,51)" rx="2" ry="2" />
<text  x="182.26" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 2.87%)</title><rect x="111.6" y="405" width="33.8" height="15.0" fill="rgb(206,218,43)" rx="2" ry="2" />
<text  x="114.56" y="415.5" >do..</text>
</g>
<g >
<title>__vfs_read (7 samples, 2.87%)</title><rect x="48.7" y="357" width="33.8" height="15.0" fill="rgb(245,223,19)" rx="2" ry="2" />
<text  x="51.69" y="367.5" >__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 3.69%)</title><rect x="101.9" y="421" width="43.5" height="15.0" fill="rgb(235,66,22)" rx="2" ry="2" />
<text  x="104.89" y="431.5" >entr..</text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.41%)</title><rect x="39.0" y="309" width="4.9" height="15.0" fill="rgb(230,77,11)" rx="2" ry="2" />
<text  x="42.02" y="319.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 1.64%)</title><rect x="159.9" y="149" width="19.4" height="15.0" fill="rgb(251,77,31)" rx="2" ry="2" />
<text  x="162.92" y="159.5" ></text>
</g>
<g >
<title>kthread (3 samples, 1.23%)</title><rect x="188.9" y="421" width="14.5" height="15.0" fill="rgb(214,100,5)" rx="2" ry="2" />
<text  x="191.93" y="431.5" ></text>
</g>
<g >
<title>event_function_call (1 samples, 0.41%)</title><rect x="150.2" y="197" width="4.9" height="15.0" fill="rgb(206,139,28)" rx="2" ry="2" />
<text  x="153.25" y="207.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.41%)</title><rect x="1132.0" y="229" width="4.8" height="15.0" fill="rgb(252,225,54)" rx="2" ry="2" />
<text  x="1134.97" y="239.5" ></text>
</g>
<g >
<title>do_idle (195 samples, 79.92%)</title><rect x="218.0" y="389" width="943.0" height="15.0" fill="rgb(224,56,24)" rx="2" ry="2" />
<text  x="220.95" y="399.5" >do_idle</text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.41%)</title><rect x="198.6" y="373" width="4.8" height="15.0" fill="rgb(205,36,48)" rx="2" ry="2" />
<text  x="201.61" y="383.5" ></text>
</g>
<g >
<title>sys_write (3 samples, 1.23%)</title><rect x="130.9" y="389" width="14.5" height="15.0" fill="rgb(222,193,4)" rx="2" ry="2" />
<text  x="133.90" y="399.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.41%)</title><rect x="1151.3" y="325" width="4.8" height="15.0" fill="rgb(248,0,47)" rx="2" ry="2" />
<text  x="1154.31" y="335.5" ></text>
</g>
<g >
<title>__perf_event_enable (88 samples, 36.07%)</title><rect x="251.8" y="229" width="425.6" height="15.0" fill="rgb(238,165,32)" rx="2" ry="2" />
<text  x="254.80" y="239.5" >__perf_event_enable</text>
</g>
<g >
<title>cpuidle_enter_state (6 samples, 2.46%)</title><rect x="1161.0" y="293" width="29.0" height="15.0" fill="rgb(249,75,11)" rx="2" ry="2" />
<text  x="1163.98" y="303.5" >cp..</text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.41%)</title><rect x="193.8" y="325" width="4.8" height="15.0" fill="rgb(207,91,34)" rx="2" ry="2" />
<text  x="196.77" y="335.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (1 samples, 0.41%)</title><rect x="1180.3" y="229" width="4.9" height="15.0" fill="rgb(241,197,1)" rx="2" ry="2" />
<text  x="1183.33" y="239.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.41%)</title><rect x="193.8" y="357" width="4.8" height="15.0" fill="rgb(210,96,11)" rx="2" ry="2" />
<text  x="196.77" y="367.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.41%)</title><rect x="256.6" y="149" width="4.9" height="15.0" fill="rgb(244,186,3)" rx="2" ry="2" />
<text  x="259.64" y="159.5" ></text>
</g>
<g >
<title>xfs_file_buffered_aio_write (1 samples, 0.41%)</title><rect x="184.1" y="165" width="4.8" height="15.0" fill="rgb(219,154,7)" rx="2" ry="2" />
<text  x="187.10" y="175.5" ></text>
</g>
<g >
<title>call_cpuidle (1 samples, 0.41%)</title><rect x="208.3" y="389" width="4.8" height="15.0" fill="rgb(217,121,7)" rx="2" ry="2" />
<text  x="211.28" y="399.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.41%)</title><rect x="198.6" y="389" width="4.8" height="15.0" fill="rgb(220,195,27)" rx="2" ry="2" />
<text  x="201.61" y="399.5" ></text>
</g>
<g >
<title>native_load_tls (1 samples, 0.41%)</title><rect x="203.4" y="437" width="4.9" height="15.0" fill="rgb(226,131,32)" rx="2" ry="2" />
<text  x="206.44" y="447.5" ></text>
</g>
<g >
<title>event_function_call (5 samples, 2.05%)</title><rect x="155.1" y="197" width="24.2" height="15.0" fill="rgb(213,92,38)" rx="2" ry="2" />
<text  x="158.08" y="207.5" >e..</text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.41%)</title><rect x="77.7" y="181" width="4.8" height="15.0" fill="rgb(238,7,47)" rx="2" ry="2" />
<text  x="80.70" y="191.5" ></text>
</g>
<g >
<title>[dd] (2 samples, 0.82%)</title><rect x="10.0" y="437" width="9.7" height="15.0" fill="rgb(236,86,14)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (6 samples, 2.46%)</title><rect x="1161.0" y="405" width="29.0" height="15.0" fill="rgb(237,212,32)" rx="2" ry="2" />
<text  x="1163.98" y="415.5" >x8..</text>
</g>
<g >
<title>__page_cache_alloc (2 samples, 0.82%)</title><rect x="63.2" y="245" width="9.7" height="15.0" fill="rgb(215,172,52)" rx="2" ry="2" />
<text  x="66.20" y="255.5" ></text>
</g>
<g >
<title>generic_exec_single (4 samples, 1.64%)</title><rect x="159.9" y="165" width="19.4" height="15.0" fill="rgb(251,53,35)" rx="2" ry="2" />
<text  x="162.92" y="175.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.41%)</title><rect x="1132.0" y="293" width="4.8" height="15.0" fill="rgb(206,137,6)" rx="2" ry="2" />
<text  x="1134.97" y="303.5" ></text>
</g>
<g >
<title>__libc_write (2 samples, 0.82%)</title><rect x="179.3" y="293" width="9.6" height="15.0" fill="rgb(231,23,48)" rx="2" ry="2" />
<text  x="182.26" y="303.5" ></text>
</g>
<g >
<title>rcu_sched (3 samples, 1.23%)</title><rect x="188.9" y="453" width="14.5" height="15.0" fill="rgb(241,183,52)" rx="2" ry="2" />
<text  x="191.93" y="463.5" ></text>
</g>
<g >
<title>nmi (1 samples, 0.41%)</title><rect x="701.6" y="213" width="4.8" height="15.0" fill="rgb(228,87,49)" rx="2" ry="2" />
<text  x="704.56" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 1.64%)</title><rect x="1161.0" y="149" width="19.3" height="15.0" fill="rgb(253,101,11)" rx="2" ry="2" />
<text  x="1163.98" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.41%)</title><rect x="222.8" y="261" width="4.8" height="15.0" fill="rgb(210,151,52)" rx="2" ry="2" />
<text  x="225.79" y="271.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (2 samples, 0.82%)</title><rect x="72.9" y="229" width="9.6" height="15.0" fill="rgb(227,209,29)" rx="2" ry="2" />
<text  x="75.87" y="239.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.41%)</title><rect x="1141.6" y="373" width="4.9" height="15.0" fill="rgb(207,126,51)" rx="2" ry="2" />
<text  x="1144.64" y="383.5" ></text>
</g>
<g >
<title>nmi (1 samples, 0.41%)</title><rect x="43.9" y="309" width="4.8" height="15.0" fill="rgb(227,176,49)" rx="2" ry="2" />
<text  x="46.85" y="319.5" ></text>
</g>
<g >
<title>no_fscache_sys_write (3 samples, 1.23%)</title><rect x="116.4" y="389" width="14.5" height="15.0" fill="rgb(219,125,53)" rx="2" ry="2" />
<text  x="119.39" y="399.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.41%)</title><rect x="716.1" y="245" width="4.8" height="15.0" fill="rgb(239,62,22)" rx="2" ry="2" />
<text  x="719.07" y="255.5" ></text>
</g>
<g >
<title>iomap_write_begin.constprop.18 (1 samples, 0.41%)</title><rect x="184.1" y="101" width="4.8" height="15.0" fill="rgb(236,12,32)" rx="2" ry="2" />
<text  x="187.10" y="111.5" ></text>
</g>
<g >
<title>no_fscache_sys_read (12 samples, 4.92%)</title><rect x="29.3" y="389" width="58.1" height="15.0" fill="rgb(240,225,53)" rx="2" ry="2" />
<text  x="32.34" y="399.5" >no_fsc..</text>
</g>
<g >
<title>__block_write_begin_int (1 samples, 0.41%)</title><rect x="184.1" y="85" width="4.8" height="15.0" fill="rgb(232,205,17)" rx="2" ry="2" />
<text  x="187.10" y="95.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.41%)</title><rect x="150.2" y="181" width="4.9" height="15.0" fill="rgb(245,170,0)" rx="2" ry="2" />
<text  x="153.25" y="191.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (1 samples, 0.41%)</title><rect x="1151.3" y="309" width="4.8" height="15.0" fill="rgb(244,3,39)" rx="2" ry="2" />
<text  x="1154.31" y="319.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.41%)</title><rect x="1132.0" y="325" width="4.8" height="15.0" fill="rgb(220,86,33)" rx="2" ry="2" />
<text  x="1134.97" y="335.5" ></text>
</g>
<g >
<title>cpu_startup_entry (197 samples, 80.74%)</title><rect x="208.3" y="405" width="952.7" height="15.0" fill="rgb(247,157,1)" rx="2" ry="2" />
<text  x="211.28" y="415.5" >cpu_startup_entry</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 1.64%)</title><rect x="1161.0" y="133" width="19.3" height="15.0" fill="rgb(226,171,49)" rx="2" ry="2" />
<text  x="1163.98" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.41%)</title><rect x="188.9" y="357" width="4.9" height="15.0" fill="rgb(235,139,48)" rx="2" ry="2" />
<text  x="191.93" y="367.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 1.64%)</title><rect x="1161.0" y="181" width="19.3" height="15.0" fill="rgb(229,110,40)" rx="2" ry="2" />
<text  x="1163.98" y="191.5" ></text>
</g>
<g >
<title>alloc_pages_current (2 samples, 0.82%)</title><rect x="63.2" y="229" width="9.7" height="15.0" fill="rgb(246,57,40)" rx="2" ry="2" />
<text  x="66.20" y="239.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 1.64%)</title><rect x="159.9" y="53" width="19.4" height="15.0" fill="rgb(209,29,52)" rx="2" ry="2" />
<text  x="162.92" y="63.5" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 1.23%)</title><rect x="188.9" y="437" width="14.5" height="15.0" fill="rgb(206,31,9)" rx="2" ry="2" />
<text  x="191.93" y="447.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.41%)</title><rect x="77.7" y="197" width="4.8" height="15.0" fill="rgb(221,160,46)" rx="2" ry="2" />
<text  x="80.70" y="207.5" ></text>
</g>
<g >
<title>call_cpuidle (191 samples, 78.28%)</title><rect x="218.0" y="373" width="923.6" height="15.0" fill="rgb(210,193,3)" rx="2" ry="2" />
<text  x="220.95" y="383.5" >call_cpuidle</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 1.23%)</title><rect x="48.7" y="277" width="14.5" height="15.0" fill="rgb(213,52,44)" rx="2" ry="2" />
<text  x="51.69" y="287.5" ></text>
</g>
<g >
<title>do_writepages (1 samples, 0.41%)</title><rect x="34.2" y="341" width="4.8" height="15.0" fill="rgb(205,119,35)" rx="2" ry="2" />
<text  x="37.18" y="351.5" ></text>
</g>
<g >
<title>swapper (204 samples, 83.61%)</title><rect x="203.4" y="453" width="986.6" height="15.0" fill="rgb(240,114,40)" rx="2" ry="2" />
<text  x="206.44" y="463.5" >swapper</text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 2.05%)</title><rect x="1161.0" y="277" width="24.2" height="15.0" fill="rgb(206,225,11)" rx="2" ry="2" />
<text  x="1163.98" y="287.5" >c..</text>
</g>
<g >
<title>update_blocked_averages (3 samples, 1.23%)</title><rect x="232.5" y="229" width="14.5" height="15.0" fill="rgb(213,222,20)" rx="2" ry="2" />
<text  x="235.46" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter (6 samples, 2.46%)</title><rect x="1161.0" y="309" width="29.0" height="15.0" fill="rgb(212,27,2)" rx="2" ry="2" />
<text  x="1163.98" y="319.5" >cp..</text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.41%)</title><rect x="19.7" y="421" width="4.8" height="15.0" fill="rgb(253,138,12)" rx="2" ry="2" />
<text  x="22.67" y="431.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.41%)</title><rect x="227.6" y="229" width="4.9" height="15.0" fill="rgb(214,23,45)" rx="2" ry="2" />
<text  x="230.62" y="239.5" ></text>
</g>
<g >
<title>perf_ioctl (5 samples, 2.05%)</title><rect x="155.1" y="245" width="24.2" height="15.0" fill="rgb(244,43,45)" rx="2" ry="2" />
<text  x="158.08" y="255.5" >p..</text>
</g>
<g >
<title>dd (29 samples, 11.89%)</title><rect x="10.0" y="453" width="140.2" height="15.0" fill="rgb(244,190,22)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >dd</text>
</g>
<g >
<title>__filemap_fdatawrite_range (2 samples, 0.82%)</title><rect x="29.3" y="357" width="9.7" height="15.0" fill="rgb(245,118,34)" rx="2" ry="2" />
<text  x="32.34" y="367.5" ></text>
</g>
<g >
<title>do_vfs_ioctl (5 samples, 2.05%)</title><rect x="155.1" y="261" width="24.2" height="15.0" fill="rgb(242,87,38)" rx="2" ry="2" />
<text  x="158.08" y="271.5" >d..</text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.41%)</title><rect x="145.4" y="421" width="4.8" height="15.0" fill="rgb(253,106,10)" rx="2" ry="2" />
<text  x="148.41" y="431.5" ></text>
</g>
<g >
<title>__pagevec_release (2 samples, 0.82%)</title><rect x="39.0" y="341" width="9.7" height="15.0" fill="rgb(209,106,28)" rx="2" ry="2" />
<text  x="42.02" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.41%)</title><rect x="68.0" y="197" width="4.9" height="15.0" fill="rgb(242,75,40)" rx="2" ry="2" />
<text  x="71.03" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (76 samples, 31.15%)</title><rect x="305.0" y="149" width="367.5" height="15.0" fill="rgb(220,181,49)" rx="2" ry="2" />
<text  x="308.00" y="159.5" >native_write_msr</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (88 samples, 36.07%)</title><rect x="251.8" y="293" width="425.6" height="15.0" fill="rgb(205,25,31)" rx="2" ry="2" />
<text  x="254.80" y="303.5" >generic_smp_call_function_single_interrupt</text>
</g>
<g >
<title>call_cpuidle (6 samples, 2.46%)</title><rect x="1161.0" y="325" width="29.0" height="15.0" fill="rgb(241,93,15)" rx="2" ry="2" />
<text  x="1163.98" y="335.5" >ca..</text>
</g>
<g >
<title>smp_call_function_single_interrupt (97 samples, 39.75%)</title><rect x="251.8" y="309" width="469.1" height="15.0" fill="rgb(232,84,7)" rx="2" ry="2" />
<text  x="254.80" y="319.5" >smp_call_function_single_interrupt</text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.41%)</title><rect x="247.0" y="293" width="4.8" height="15.0" fill="rgb(251,208,20)" rx="2" ry="2" />
<text  x="249.97" y="303.5" ></text>
</g>
<g >
<title>remote_function (88 samples, 36.07%)</title><rect x="251.8" y="261" width="425.6" height="15.0" fill="rgb(239,28,42)" rx="2" ry="2" />
<text  x="254.80" y="271.5" >remote_function</text>
</g>
<g >
<title>new_sync_read (7 samples, 2.87%)</title><rect x="48.7" y="341" width="33.8" height="15.0" fill="rgb(235,56,22)" rx="2" ry="2" />
<text  x="51.69" y="351.5" >ne..</text>
</g>
<g >
<title>record__pushfn (2 samples, 0.82%)</title><rect x="179.3" y="309" width="9.6" height="15.0" fill="rgb(221,113,47)" rx="2" ry="2" />
<text  x="182.26" y="319.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (1 samples, 0.41%)</title><rect x="179.3" y="133" width="4.8" height="15.0" fill="rgb(225,114,5)" rx="2" ry="2" />
<text  x="182.26" y="143.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (190 samples, 77.87%)</title><rect x="218.0" y="341" width="918.8" height="15.0" fill="rgb(244,80,32)" rx="2" ry="2" />
<text  x="220.95" y="351.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__next_timer_interrupt (4 samples, 1.64%)</title><rect x="687.0" y="229" width="19.4" height="15.0" fill="rgb(231,77,50)" rx="2" ry="2" />
<text  x="690.05" y="239.5" ></text>
</g>
<g >
<title>ioctl (5 samples, 2.05%)</title><rect x="155.1" y="325" width="24.2" height="15.0" fill="rgb(252,210,30)" rx="2" ry="2" />
<text  x="158.08" y="335.5" >i..</text>
</g>
<g >
<title>xfs_vm_writepages (1 samples, 0.41%)</title><rect x="179.3" y="85" width="4.8" height="15.0" fill="rgb(254,52,23)" rx="2" ry="2" />
<text  x="182.26" y="95.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.41%)</title><rect x="1132.0" y="277" width="4.8" height="15.0" fill="rgb(242,73,15)" rx="2" ry="2" />
<text  x="1134.97" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.41%)</title><rect x="1132.0" y="245" width="4.8" height="15.0" fill="rgb(244,67,41)" rx="2" ry="2" />
<text  x="1134.97" y="255.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (9 samples, 3.69%)</title><rect x="677.4" y="261" width="43.5" height="15.0" fill="rgb(210,156,13)" rx="2" ry="2" />
<text  x="680.38" y="271.5" >__ti..</text>
</g>
<g >
<title>ctx_resched (4 samples, 1.64%)</title><rect x="159.9" y="101" width="19.4" height="15.0" fill="rgb(208,135,53)" rx="2" ry="2" />
<text  x="162.92" y="111.5" ></text>
</g>
<g >
<title>ll_rw_block (1 samples, 0.41%)</title><rect x="184.1" y="69" width="4.8" height="15.0" fill="rgb(239,100,4)" rx="2" ry="2" />
<text  x="187.10" y="79.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (5 samples, 2.05%)</title><rect x="155.1" y="229" width="24.2" height="15.0" fill="rgb(247,25,10)" rx="2" ry="2" />
<text  x="158.08" y="239.5" >p..</text>
</g>
<g >
<title>write (13 samples, 5.33%)</title><rect x="87.4" y="437" width="62.8" height="15.0" fill="rgb(221,53,11)" rx="2" ry="2" />
<text  x="90.38" y="447.5" >write</text>
</g>
<g >
<title>__perf_event_enable (4 samples, 1.64%)</title><rect x="159.9" y="117" width="19.4" height="15.0" fill="rgb(211,31,29)" rx="2" ry="2" />
<text  x="162.92" y="127.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.82%)</title><rect x="179.3" y="197" width="9.6" height="15.0" fill="rgb(214,127,9)" rx="2" ry="2" />
<text  x="182.26" y="207.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.41%)</title><rect x="116.4" y="357" width="4.8" height="15.0" fill="rgb(221,162,49)" rx="2" ry="2" />
<text  x="119.39" y="367.5" ></text>
</g>
<g >
<title>iomap_apply (1 samples, 0.41%)</title><rect x="184.1" y="133" width="4.8" height="15.0" fill="rgb(245,14,41)" rx="2" ry="2" />
<text  x="187.10" y="143.5" ></text>
</g>
<g >
<title>cmd_record (8 samples, 3.28%)</title><rect x="150.2" y="357" width="38.7" height="15.0" fill="rgb(241,173,4)" rx="2" ry="2" />
<text  x="153.25" y="367.5" >cmd..</text>
</g>
<g >
<title>ondemand_readahead (4 samples, 1.64%)</title><rect x="63.2" y="277" width="19.3" height="15.0" fill="rgb(221,25,1)" rx="2" ry="2" />
<text  x="66.20" y="287.5" ></text>
</g>
<g >
<title>perf_evlist__enable (5 samples, 2.05%)</title><rect x="155.1" y="341" width="24.2" height="15.0" fill="rgb(207,165,48)" rx="2" ry="2" />
<text  x="158.08" y="351.5" >p..</text>
</g>
<g >
<title>hrtimer_get_next_event (2 samples, 0.82%)</title><rect x="706.4" y="229" width="9.7" height="15.0" fill="rgb(251,209,3)" rx="2" ry="2" />
<text  x="709.39" y="239.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.41%)</title><rect x="82.5" y="357" width="4.9" height="15.0" fill="rgb(226,3,42)" rx="2" ry="2" />
<text  x="85.54" y="367.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.41%)</title><rect x="251.8" y="149" width="4.8" height="15.0" fill="rgb(239,8,47)" rx="2" ry="2" />
<text  x="254.80" y="159.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 1.64%)</title><rect x="1161.0" y="165" width="19.3" height="15.0" fill="rgb(250,25,32)" rx="2" ry="2" />
<text  x="1163.98" y="175.5" ></text>
</g>
<g >
<title>perf_event_nmi_handler (1 samples, 0.41%)</title><rect x="672.5" y="149" width="4.9" height="15.0" fill="rgb(224,43,17)" rx="2" ry="2" />
<text  x="675.54" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.41%)</title><rect x="1132.0" y="213" width="4.8" height="15.0" fill="rgb(229,178,48)" rx="2" ry="2" />
<text  x="1134.97" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.41%)</title><rect x="150.2" y="309" width="4.9" height="15.0" fill="rgb(232,21,14)" rx="2" ry="2" />
<text  x="153.25" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (88 samples, 36.07%)</title><rect x="251.8" y="181" width="425.6" height="15.0" fill="rgb(236,110,8)" rx="2" ry="2" />
<text  x="254.80" y="191.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>start_secondary (197 samples, 80.74%)</title><rect x="208.3" y="421" width="952.7" height="15.0" fill="rgb(250,194,7)" rx="2" ry="2" />
<text  x="211.28" y="431.5" >start_secondary</text>
</g>
<g >
<title>all (244 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(254,71,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>ioctl (1 samples, 0.41%)</title><rect x="150.2" y="325" width="4.9" height="15.0" fill="rgb(250,43,44)" rx="2" ry="2" />
<text  x="153.25" y="335.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.41%)</title><rect x="126.1" y="357" width="4.8" height="15.0" fill="rgb(209,136,42)" rx="2" ry="2" />
<text  x="129.07" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (8 samples, 3.28%)</title><rect x="150.2" y="421" width="38.7" height="15.0" fill="rgb(238,30,40)" rx="2" ry="2" />
<text  x="153.25" y="431.5" >__l..</text>
</g>
<g >
<title>nmi (1 samples, 0.41%)</title><rect x="82.5" y="341" width="4.9" height="15.0" fill="rgb(205,94,12)" rx="2" ry="2" />
<text  x="85.54" y="351.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (7 samples, 2.87%)</title><rect x="48.7" y="325" width="33.8" height="15.0" fill="rgb(236,89,14)" rx="2" ry="2" />
<text  x="51.69" y="335.5" >ex..</text>
</g>
<g >
<title>__filemap_fdatawrite_range (1 samples, 0.41%)</title><rect x="179.3" y="117" width="4.8" height="15.0" fill="rgb(241,39,15)" rx="2" ry="2" />
<text  x="182.26" y="127.5" ></text>
</g>
<g >
<title>generic_file_read_iter (7 samples, 2.87%)</title><rect x="48.7" y="309" width="33.8" height="15.0" fill="rgb(213,83,51)" rx="2" ry="2" />
<text  x="51.69" y="319.5" >ge..</text>
</g>
<g >
<title>add_to_page_cache_lru (2 samples, 0.82%)</title><rect x="72.9" y="213" width="9.6" height="15.0" fill="rgb(228,41,31)" rx="2" ry="2" />
<text  x="75.87" y="223.5" ></text>
</g>
<g >
<title>run_builtin (8 samples, 3.28%)</title><rect x="150.2" y="373" width="38.7" height="15.0" fill="rgb(245,184,30)" rx="2" ry="2" />
<text  x="153.25" y="383.5" >run..</text>
</g>
<g >
<title>need_update (1 samples, 0.41%)</title><rect x="1156.1" y="325" width="4.9" height="15.0" fill="rgb(213,153,34)" rx="2" ry="2" />
<text  x="1159.15" y="335.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.82%)</title><rect x="121.2" y="373" width="9.7" height="15.0" fill="rgb(238,97,32)" rx="2" ry="2" />
<text  x="124.23" y="383.5" ></text>
</g>
<g >
<title>quiet_vmstat (1 samples, 0.41%)</title><rect x="1156.1" y="341" width="4.9" height="15.0" fill="rgb(226,140,37)" rx="2" ry="2" />
<text  x="1159.15" y="351.5" ></text>
</g>
<g >
<title>write_cache_pages (1 samples, 0.41%)</title><rect x="179.3" y="69" width="4.8" height="15.0" fill="rgb(208,80,16)" rx="2" ry="2" />
<text  x="182.26" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.82%)</title><rect x="179.3" y="261" width="9.6" height="15.0" fill="rgb(250,47,52)" rx="2" ry="2" />
<text  x="182.26" y="271.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.41%)</title><rect x="1132.0" y="261" width="4.8" height="15.0" fill="rgb(246,114,36)" rx="2" ry="2" />
<text  x="1134.97" y="271.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (88 samples, 36.07%)</title><rect x="251.8" y="165" width="425.6" height="15.0" fill="rgb(247,6,7)" rx="2" ry="2" />
<text  x="254.80" y="175.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>irq_exit (1 samples, 0.41%)</title><rect x="1180.3" y="245" width="4.9" height="15.0" fill="rgb(215,60,53)" rx="2" ry="2" />
<text  x="1183.33" y="255.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 1.64%)</title><rect x="1161.0" y="229" width="19.3" height="15.0" fill="rgb(245,153,49)" rx="2" ry="2" />
<text  x="1163.98" y="239.5" ></text>
</g>
<g >
<title>__orig_fdget_pos (1 samples, 0.41%)</title><rect x="116.4" y="373" width="4.8" height="15.0" fill="rgb(229,47,5)" rx="2" ry="2" />
<text  x="119.39" y="383.5" ></text>
</g>
<g >
<title>__do_page_cache_readahead (4 samples, 1.64%)</title><rect x="63.2" y="261" width="19.3" height="15.0" fill="rgb(218,9,7)" rx="2" ry="2" />
<text  x="66.20" y="271.5" ></text>
</g>
<g >
<title>vfs_fsync_range (1 samples, 0.41%)</title><rect x="179.3" y="165" width="4.8" height="15.0" fill="rgb(240,45,32)" rx="2" ry="2" />
<text  x="182.26" y="175.5" ></text>
</g>
<g >
<title>cpuidle_reflect (1 samples, 0.41%)</title><rect x="213.1" y="389" width="4.9" height="15.0" fill="rgb(216,202,25)" rx="2" ry="2" />
<text  x="216.11" y="399.5" ></text>
</g>
<g >
<title>event_function (4 samples, 1.64%)</title><rect x="159.9" y="133" width="19.4" height="15.0" fill="rgb(207,210,2)" rx="2" ry="2" />
<text  x="162.92" y="143.5" ></text>
</g>
<g >
<title>sys_ioctl (5 samples, 2.05%)</title><rect x="155.1" y="277" width="24.2" height="15.0" fill="rgb(252,124,31)" rx="2" ry="2" />
<text  x="158.08" y="287.5" >s..</text>
</g>
<g >
<title>__tick_nohz_idle_enter (2 samples, 0.82%)</title><rect x="1151.3" y="357" width="9.7" height="15.0" fill="rgb(253,10,12)" rx="2" ry="2" />
<text  x="1154.31" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.41%)</title><rect x="711.2" y="213" width="4.9" height="15.0" fill="rgb(206,175,30)" rx="2" ry="2" />
<text  x="714.23" y="223.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.82%)</title><rect x="92.2" y="421" width="9.7" height="15.0" fill="rgb(241,103,6)" rx="2" ry="2" />
<text  x="95.21" y="431.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.41%)</title><rect x="1141.6" y="357" width="4.9" height="15.0" fill="rgb(237,62,40)" rx="2" ry="2" />
<text  x="1144.64" y="367.5" ></text>
</g>
<g >
<title>intel_idle (84 samples, 34.43%)</title><rect x="720.9" y="325" width="406.2" height="15.0" fill="rgb(223,197,14)" rx="2" ry="2" />
<text  x="723.90" y="335.5" >intel_idle</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.41%)</title><rect x="150.2" y="293" width="4.9" height="15.0" fill="rgb(209,45,35)" rx="2" ry="2" />
<text  x="153.25" y="303.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 1.64%)</title><rect x="227.6" y="293" width="19.4" height="15.0" fill="rgb(223,31,48)" rx="2" ry="2" />
<text  x="230.62" y="303.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.41%)</title><rect x="696.7" y="213" width="4.9" height="15.0" fill="rgb(215,15,13)" rx="2" ry="2" />
<text  x="699.72" y="223.5" ></text>
</g>
<g >
<title>ctx_resched (88 samples, 36.07%)</title><rect x="251.8" y="213" width="425.6" height="15.0" fill="rgb(245,39,41)" rx="2" ry="2" />
<text  x="254.80" y="223.5" >ctx_resched</text>
</g>
<g >
<title>vfs_read (8 samples, 3.28%)</title><rect x="48.7" y="373" width="38.7" height="15.0" fill="rgb(213,60,18)" rx="2" ry="2" />
<text  x="51.69" y="383.5" >vfs..</text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 1.23%)</title><rect x="48.7" y="293" width="14.5" height="15.0" fill="rgb(211,98,26)" rx="2" ry="2" />
<text  x="51.69" y="303.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 3.28%)</title><rect x="150.2" y="437" width="38.7" height="15.0" fill="rgb(253,101,37)" rx="2" ry="2" />
<text  x="153.25" y="447.5" >[un..</text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.41%)</title><rect x="227.6" y="213" width="4.9" height="15.0" fill="rgb(223,16,26)" rx="2" ry="2" />
<text  x="230.62" y="223.5" ></text>
</g>
<g >
<title>native_sched_clock (8 samples, 3.28%)</title><rect x="266.3" y="149" width="38.7" height="15.0" fill="rgb(213,134,18)" rx="2" ry="2" />
<text  x="269.31" y="159.5" >nat..</text>
</g>
<g >
<title>get_next_timer_interrupt (8 samples, 3.28%)</title><rect x="677.4" y="245" width="38.7" height="15.0" fill="rgb(249,140,33)" rx="2" ry="2" />
<text  x="680.38" y="255.5" >get..</text>
</g>
<g >
<title>irq_exit (9 samples, 3.69%)</title><rect x="677.4" y="293" width="43.5" height="15.0" fill="rgb(224,42,39)" rx="2" ry="2" />
<text  x="680.38" y="303.5" >irq_..</text>
</g>
<g >
<title>event_function (4 samples, 1.64%)</title><rect x="1161.0" y="197" width="19.3" height="15.0" fill="rgb(216,139,39)" rx="2" ry="2" />
<text  x="1163.98" y="207.5" ></text>
</g>
<g >
<title>no_fscache_sys_write (2 samples, 0.82%)</title><rect x="179.3" y="245" width="9.6" height="15.0" fill="rgb(245,42,5)" rx="2" ry="2" />
<text  x="182.26" y="255.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (88 samples, 36.07%)</title><rect x="251.8" y="277" width="425.6" height="15.0" fill="rgb(236,31,54)" rx="2" ry="2" />
<text  x="254.80" y="287.5" >flush_smp_call_function_queue</text>
</g>
<g >
<title>perf_mmap__push (2 samples, 0.82%)</title><rect x="179.3" y="325" width="9.6" height="15.0" fill="rgb(213,171,49)" rx="2" ry="2" />
<text  x="182.26" y="335.5" ></text>
</g>
<g >
<title>main (8 samples, 3.28%)</title><rect x="150.2" y="405" width="38.7" height="15.0" fill="rgb(217,133,14)" rx="2" ry="2" />
<text  x="153.25" y="415.5" >main</text>
</g>
<g >
<title>smp_apic_timer_interrupt (6 samples, 2.46%)</title><rect x="222.8" y="309" width="29.0" height="15.0" fill="rgb(252,162,11)" rx="2" ry="2" />
<text  x="225.79" y="319.5" >sm..</text>
</g>
<g >
<title>sys_fadvise64_64 (4 samples, 1.64%)</title><rect x="29.3" y="373" width="19.4" height="15.0" fill="rgb(214,98,49)" rx="2" ry="2" />
<text  x="32.34" y="383.5" ></text>
</g>
<g >
<title>cleanup_module (3 samples, 1.23%)</title><rect x="130.9" y="373" width="14.5" height="15.0" fill="rgb(209,94,13)" rx="2" ry="2" />
<text  x="133.90" y="383.5" ></text>
</g>
<g >
<title>ext4_readpages (2 samples, 0.82%)</title><rect x="72.9" y="245" width="9.6" height="15.0" fill="rgb(254,206,49)" rx="2" ry="2" />
<text  x="75.87" y="255.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.82%)</title><rect x="188.9" y="373" width="9.7" height="15.0" fill="rgb(237,196,34)" rx="2" ry="2" />
<text  x="191.93" y="383.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (6 samples, 2.46%)</title><rect x="1161.0" y="421" width="29.0" height="15.0" fill="rgb(206,205,11)" rx="2" ry="2" />
<text  x="1163.98" y="431.5" >x8..</text>
</g>
<g >
<title>secondary_startup_64 (203 samples, 83.20%)</title><rect x="208.3" y="437" width="981.7" height="15.0" fill="rgb(216,78,28)" rx="2" ry="2" />
<text  x="211.28" y="447.5" >secondary_startup_64</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.41%)</title><rect x="68.0" y="213" width="4.9" height="15.0" fill="rgb(241,13,12)" rx="2" ry="2" />
<text  x="71.03" y="223.5" ></text>
</g>
<g >
<title>invalidate_mapping_pages (2 samples, 0.82%)</title><rect x="39.0" y="357" width="9.7" height="15.0" fill="rgb(232,182,11)" rx="2" ry="2" />
<text  x="42.02" y="367.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.41%)</title><rect x="222.8" y="229" width="4.8" height="15.0" fill="rgb(234,141,27)" rx="2" ry="2" />
<text  x="225.79" y="239.5" ></text>
</g>
<g >
<title>submit_bh_wbc (1 samples, 0.41%)</title><rect x="184.1" y="53" width="4.8" height="15.0" fill="rgb(242,224,43)" rx="2" ry="2" />
<text  x="187.10" y="63.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (7 samples, 2.87%)</title><rect x="218.0" y="325" width="33.8" height="15.0" fill="rgb(249,77,37)" rx="2" ry="2" />
<text  x="220.95" y="335.5" >ap..</text>
</g>
<g >
<title>rcu_gp_kthread (3 samples, 1.23%)</title><rect x="188.9" y="405" width="14.5" height="15.0" fill="rgb(254,31,51)" rx="2" ry="2" />
<text  x="191.93" y="415.5" ></text>
</g>
<g >
<title>submit_bio (1 samples, 0.41%)</title><rect x="184.1" y="37" width="4.8" height="15.0" fill="rgb(253,228,24)" rx="2" ry="2" />
<text  x="187.10" y="47.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.41%)</title><rect x="1136.8" y="341" width="4.8" height="15.0" fill="rgb(252,187,34)" rx="2" ry="2" />
<text  x="1139.80" y="351.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.41%)</title><rect x="1151.3" y="341" width="4.8" height="15.0" fill="rgb(208,205,33)" rx="2" ry="2" />
<text  x="1154.31" y="351.5" ></text>
</g>
<g >
<title>event_function (88 samples, 36.07%)</title><rect x="251.8" y="245" width="425.6" height="15.0" fill="rgb(221,67,7)" rx="2" ry="2" />
<text  x="254.80" y="255.5" >event_function</text>
</g>
<g >
<title>call_function_single_interrupt (97 samples, 39.75%)</title><rect x="251.8" y="325" width="469.1" height="15.0" fill="rgb(212,110,34)" rx="2" ry="2" />
<text  x="254.80" y="335.5" >call_function_single_interrupt</text>
</g>
<g >
<title>sys_ioctl (1 samples, 0.41%)</title><rect x="150.2" y="277" width="4.9" height="15.0" fill="rgb(230,136,0)" rx="2" ry="2" />
<text  x="153.25" y="287.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.41%)</title><rect x="1151.3" y="277" width="4.8" height="15.0" fill="rgb(210,178,29)" rx="2" ry="2" />
<text  x="1154.31" y="287.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.41%)</title><rect x="1151.3" y="293" width="4.8" height="15.0" fill="rgb(232,36,45)" rx="2" ry="2" />
<text  x="1154.31" y="303.5" ></text>
</g>
<g >
<title>handle_internal_command (8 samples, 3.28%)</title><rect x="150.2" y="389" width="38.7" height="15.0" fill="rgb(250,36,6)" rx="2" ry="2" />
<text  x="153.25" y="399.5" >han..</text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.41%)</title><rect x="218.0" y="309" width="4.8" height="15.0" fill="rgb(207,119,7)" rx="2" ry="2" />
<text  x="220.95" y="319.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.41%)</title><rect x="198.6" y="357" width="4.8" height="15.0" fill="rgb(207,123,2)" rx="2" ry="2" />
<text  x="201.61" y="367.5" ></text>
</g>
</g>
</svg>
