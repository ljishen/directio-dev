<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>cmd_record (5 samples, 2.73%)</title><rect x="242.1" y="357" width="32.3" height="15.0" fill="rgb(254,8,39)" rx="2" ry="2" />
<text  x="245.13" y="367.5" >cm..</text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 2.19%)</title><rect x="1144.9" y="261" width="25.8" height="15.0" fill="rgb(236,201,42)" rx="2" ry="2" />
<text  x="1147.86" y="271.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.55%)</title><rect x="1183.6" y="389" width="6.4" height="15.0" fill="rgb(218,98,4)" rx="2" ry="2" />
<text  x="1186.55" y="399.5" ></text>
</g>
<g >
<title>all (183 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(234,134,15)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>rcu_eqs_enter_common.constprop.71 (1 samples, 0.55%)</title><rect x="822.5" y="261" width="6.4" height="15.0" fill="rgb(213,97,29)" rx="2" ry="2" />
<text  x="825.46" y="271.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 1.09%)</title><rect x="222.8" y="341" width="12.9" height="15.0" fill="rgb(217,136,42)" rx="2" ry="2" />
<text  x="225.79" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.55%)</title><rect x="177.7" y="341" width="6.4" height="15.0" fill="rgb(215,155,38)" rx="2" ry="2" />
<text  x="180.65" y="351.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (1 samples, 0.55%)</title><rect x="132.5" y="229" width="6.5" height="15.0" fill="rgb(216,18,47)" rx="2" ry="2" />
<text  x="135.51" y="239.5" ></text>
</g>
<g >
<title>systemd-journal (1 samples, 0.55%)</title><rect x="1183.6" y="453" width="6.4" height="15.0" fill="rgb(227,204,52)" rx="2" ry="2" />
<text  x="1186.55" y="463.5" ></text>
</g>
<g >
<title>do_blockdev_direct_IO (7 samples, 3.83%)</title><rect x="106.7" y="261" width="45.2" height="15.0" fill="rgb(220,0,12)" rx="2" ry="2" />
<text  x="109.72" y="271.5" >do_b..</text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 1.09%)</title><rect x="190.5" y="421" width="12.9" height="15.0" fill="rgb(222,120,44)" rx="2" ry="2" />
<text  x="193.55" y="431.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (95 samples, 51.91%)</title><rect x="280.8" y="325" width="612.6" height="15.0" fill="rgb(251,23,26)" rx="2" ry="2" />
<text  x="283.82" y="335.5" >call_function_single_interrupt</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 2.19%)</title><rect x="248.6" y="69" width="25.8" height="15.0" fill="rgb(254,71,48)" rx="2" ry="2" />
<text  x="251.58" y="79.5" >i..</text>
</g>
<g >
<title>__blockdev_direct_IO (12 samples, 6.56%)</title><rect x="100.3" y="277" width="77.4" height="15.0" fill="rgb(223,205,32)" rx="2" ry="2" />
<text  x="103.27" y="287.5" >__blockd..</text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 2.19%)</title><rect x="1144.9" y="277" width="25.8" height="15.0" fill="rgb(205,55,35)" rx="2" ry="2" />
<text  x="1147.86" y="287.5" >c..</text>
</g>
<g >
<title>schedule (1 samples, 0.55%)</title><rect x="1183.6" y="309" width="6.4" height="15.0" fill="rgb(248,112,38)" rx="2" ry="2" />
<text  x="1186.55" y="319.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.55%)</title><rect x="177.7" y="357" width="6.4" height="15.0" fill="rgb(230,224,3)" rx="2" ry="2" />
<text  x="180.65" y="367.5" ></text>
</g>
<g >
<title>event_function (4 samples, 2.19%)</title><rect x="1144.9" y="197" width="25.8" height="15.0" fill="rgb(209,70,37)" rx="2" ry="2" />
<text  x="1147.86" y="207.5" >e..</text>
</g>
<g >
<title>ext4_file_read_iter (12 samples, 6.56%)</title><rect x="100.3" y="325" width="77.4" height="15.0" fill="rgb(226,176,33)" rx="2" ry="2" />
<text  x="103.27" y="335.5" >ext4_fil..</text>
</g>
<g >
<title>ctx_resched (4 samples, 2.19%)</title><rect x="1144.9" y="165" width="25.8" height="15.0" fill="rgb(216,94,31)" rx="2" ry="2" />
<text  x="1147.86" y="175.5" >c..</text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 2.19%)</title><rect x="1106.2" y="293" width="25.8" height="15.0" fill="rgb(222,200,31)" rx="2" ry="2" />
<text  x="1109.17" y="303.5" >s..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 2.19%)</title><rect x="1144.9" y="117" width="25.8" height="15.0" fill="rgb(245,219,6)" rx="2" ry="2" />
<text  x="1147.86" y="127.5" >_..</text>
</g>
<g >
<title>retint_kernel (1 samples, 0.55%)</title><rect x="1132.0" y="341" width="6.4" height="15.0" fill="rgb(236,80,5)" rx="2" ry="2" />
<text  x="1134.97" y="351.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.55%)</title><rect x="203.4" y="421" width="6.5" height="15.0" fill="rgb(251,4,10)" rx="2" ry="2" />
<text  x="206.44" y="431.5" ></text>
</g>
<g >
<title>new_sync_read (13 samples, 7.10%)</title><rect x="93.8" y="341" width="83.9" height="15.0" fill="rgb(214,41,19)" rx="2" ry="2" />
<text  x="96.83" y="351.5" >new_sync_..</text>
</g>
<g >
<title>perf_event_for_each_child (5 samples, 2.73%)</title><rect x="242.1" y="229" width="32.3" height="15.0" fill="rgb(229,133,39)" rx="2" ry="2" />
<text  x="245.13" y="239.5" >pe..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.55%)</title><rect x="1183.6" y="437" width="6.4" height="15.0" fill="rgb(229,59,17)" rx="2" ry="2" />
<text  x="1186.55" y="447.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.55%)</title><rect x="1183.6" y="325" width="6.4" height="15.0" fill="rgb(230,10,2)" rx="2" ry="2" />
<text  x="1186.55" y="335.5" ></text>
</g>
<g >
<title>handle_internal_command (5 samples, 2.73%)</title><rect x="242.1" y="389" width="32.3" height="15.0" fill="rgb(208,35,8)" rx="2" ry="2" />
<text  x="245.13" y="399.5" >ha..</text>
</g>
<g >
<title>dd (36 samples, 19.67%)</title><rect x="10.0" y="453" width="232.1" height="15.0" fill="rgb(207,112,15)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >dd</text>
</g>
<g >
<title>remote_function (4 samples, 2.19%)</title><rect x="248.6" y="149" width="25.8" height="15.0" fill="rgb(214,65,14)" rx="2" ry="2" />
<text  x="251.58" y="159.5" >r..</text>
</g>
<g >
<title>perf_event_nmi_handler (1 samples, 0.55%)</title><rect x="809.6" y="149" width="6.4" height="15.0" fill="rgb(253,44,33)" rx="2" ry="2" />
<text  x="812.56" y="159.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.55%)</title><rect x="1183.6" y="357" width="6.4" height="15.0" fill="rgb(251,205,26)" rx="2" ry="2" />
<text  x="1186.55" y="367.5" ></text>
</g>
<g >
<title>perf_evlist__enable (5 samples, 2.73%)</title><rect x="242.1" y="341" width="32.3" height="15.0" fill="rgb(222,52,20)" rx="2" ry="2" />
<text  x="245.13" y="351.5" >pe..</text>
</g>
<g >
<title>intel_idle (1 samples, 0.55%)</title><rect x="1170.7" y="277" width="6.4" height="15.0" fill="rgb(240,49,25)" rx="2" ry="2" />
<text  x="1173.66" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (95 samples, 51.91%)</title><rect x="280.8" y="309" width="612.6" height="15.0" fill="rgb(244,81,35)" rx="2" ry="2" />
<text  x="283.82" y="319.5" >smp_call_function_single_interrupt</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 2.19%)</title><rect x="1106.2" y="165" width="25.8" height="15.0" fill="rgb(254,75,1)" rx="2" ry="2" />
<text  x="1109.17" y="175.5" >i..</text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.55%)</title><rect x="235.7" y="421" width="6.4" height="15.0" fill="rgb(245,207,19)" rx="2" ry="2" />
<text  x="238.68" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 2.19%)</title><rect x="209.9" y="421" width="25.8" height="15.0" fill="rgb(246,187,27)" rx="2" ry="2" />
<text  x="212.89" y="431.5" >e..</text>
</g>
<g >
<title>event_function (4 samples, 2.19%)</title><rect x="248.6" y="133" width="25.8" height="15.0" fill="rgb(217,191,3)" rx="2" ry="2" />
<text  x="251.58" y="143.5" >e..</text>
</g>
<g >
<title>cpuidle_enter_state (1 samples, 0.55%)</title><rect x="1177.1" y="309" width="6.5" height="15.0" fill="rgb(247,123,6)" rx="2" ry="2" />
<text  x="1180.10" y="319.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.55%)</title><rect x="280.8" y="149" width="6.5" height="15.0" fill="rgb(213,67,3)" rx="2" ry="2" />
<text  x="283.82" y="159.5" ></text>
</g>
<g >
<title>generic_file_read_iter (12 samples, 6.56%)</title><rect x="100.3" y="309" width="77.4" height="15.0" fill="rgb(235,185,43)" rx="2" ry="2" />
<text  x="103.27" y="319.5" >generic_..</text>
</g>
<g >
<title>__perf_event_enable (4 samples, 2.19%)</title><rect x="1144.9" y="181" width="25.8" height="15.0" fill="rgb(209,73,14)" rx="2" ry="2" />
<text  x="1147.86" y="191.5" >_..</text>
</g>
<g >
<title>cpuidle_enter (133 samples, 72.68%)</title><rect x="280.8" y="357" width="857.6" height="15.0" fill="rgb(218,98,5)" rx="2" ry="2" />
<text  x="283.82" y="367.5" >cpuidle_enter</text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.55%)</title><rect x="87.4" y="357" width="6.4" height="15.0" fill="rgb(233,138,13)" rx="2" ry="2" />
<text  x="90.38" y="367.5" ></text>
</g>
<g >
<title>event_function (84 samples, 45.90%)</title><rect x="280.8" y="245" width="541.7" height="15.0" fill="rgb(253,68,39)" rx="2" ry="2" />
<text  x="283.82" y="255.5" >event_function</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 10.38%)</title><rect x="68.0" y="421" width="122.5" height="15.0" fill="rgb(231,179,33)" rx="2" ry="2" />
<text  x="71.03" y="431.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 2.19%)</title><rect x="1106.2" y="261" width="25.8" height="15.0" fill="rgb(248,3,21)" rx="2" ry="2" />
<text  x="1109.17" y="271.5" >f..</text>
</g>
<g >
<title>vfs_write (2 samples, 1.09%)</title><rect x="222.8" y="373" width="12.9" height="15.0" fill="rgb(250,59,46)" rx="2" ry="2" />
<text  x="225.79" y="383.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 2.19%)</title><rect x="1106.2" y="213" width="25.8" height="15.0" fill="rgb(206,7,22)" rx="2" ry="2" />
<text  x="1109.17" y="223.5" >_..</text>
</g>
<g >
<title>common_file_perm (1 samples, 0.55%)</title><rect x="177.7" y="309" width="6.4" height="15.0" fill="rgb(216,153,15)" rx="2" ry="2" />
<text  x="180.65" y="319.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (6 samples, 3.28%)</title><rect x="1144.9" y="421" width="38.7" height="15.0" fill="rgb(225,146,35)" rx="2" ry="2" />
<text  x="1147.86" y="431.5" >x86..</text>
</g>
<g >
<title>do_syscall_64 (4 samples, 2.19%)</title><rect x="209.9" y="405" width="25.8" height="15.0" fill="rgb(217,29,27)" rx="2" ry="2" />
<text  x="212.89" y="415.5" >d..</text>
</g>
<g >
<title>hrtimer_get_next_event (1 samples, 0.55%)</title><rect x="886.9" y="245" width="6.5" height="15.0" fill="rgb(206,162,22)" rx="2" ry="2" />
<text  x="889.94" y="255.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.55%)</title><rect x="1138.4" y="373" width="6.5" height="15.0" fill="rgb(206,176,14)" rx="2" ry="2" />
<text  x="1141.42" y="383.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 2.19%)</title><rect x="1144.9" y="133" width="25.8" height="15.0" fill="rgb(220,177,35)" rx="2" ry="2" />
<text  x="1147.86" y="143.5" >i..</text>
</g>
<g >
<title>__perf_event_enable (4 samples, 2.19%)</title><rect x="248.6" y="117" width="25.8" height="15.0" fill="rgb(231,82,52)" rx="2" ry="2" />
<text  x="251.58" y="127.5" >_..</text>
</g>
<g >
<title>find_next_bit (1 samples, 0.55%)</title><rect x="880.5" y="229" width="6.4" height="15.0" fill="rgb(246,181,26)" rx="2" ry="2" />
<text  x="883.49" y="239.5" ></text>
</g>
<g >
<title>iov_iter_get_pages (1 samples, 0.55%)</title><rect x="139.0" y="245" width="6.4" height="15.0" fill="rgb(215,178,28)" rx="2" ry="2" />
<text  x="141.96" y="255.5" ></text>
</g>
<g >
<title>gup_pgd_range (1 samples, 0.55%)</title><rect x="139.0" y="213" width="6.4" height="15.0" fill="rgb(239,153,39)" rx="2" ry="2" />
<text  x="141.96" y="223.5" ></text>
</g>
<g >
<title>memset_erms (4 samples, 2.19%)</title><rect x="151.9" y="261" width="25.8" height="15.0" fill="rgb(241,167,16)" rx="2" ry="2" />
<text  x="154.86" y="271.5" >m..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.55%)</title><rect x="216.3" y="373" width="6.5" height="15.0" fill="rgb(253,45,43)" rx="2" ry="2" />
<text  x="219.34" y="383.5" ></text>
</g>
<g >
<title>epoll_wait (1 samples, 0.55%)</title><rect x="1183.6" y="421" width="6.4" height="15.0" fill="rgb(225,80,36)" rx="2" ry="2" />
<text  x="1186.55" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (5 samples, 2.73%)</title><rect x="1144.9" y="309" width="32.2" height="15.0" fill="rgb(216,182,51)" rx="2" ry="2" />
<text  x="1147.86" y="319.5" >cp..</text>
</g>
<g >
<title>native_write_msr (75 samples, 40.98%)</title><rect x="326.0" y="149" width="483.6" height="15.0" fill="rgb(224,49,2)" rx="2" ry="2" />
<text  x="328.96" y="159.5" >native_write_msr</text>
</g>
<g >
<title>nmi (1 samples, 0.55%)</title><rect x="145.4" y="245" width="6.5" height="15.0" fill="rgb(213,185,35)" rx="2" ry="2" />
<text  x="148.41" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 2.19%)</title><rect x="1144.9" y="149" width="25.8" height="15.0" fill="rgb(215,0,4)" rx="2" ry="2" />
<text  x="1147.86" y="159.5" >x..</text>
</g>
<g >
<title>rest_init (6 samples, 3.28%)</title><rect x="1144.9" y="373" width="38.7" height="15.0" fill="rgb(248,26,7)" rx="2" ry="2" />
<text  x="1147.86" y="383.5" >res..</text>
</g>
<g >
<title>intel_pmu_enable_all (84 samples, 45.90%)</title><rect x="280.8" y="181" width="541.7" height="15.0" fill="rgb(232,185,32)" rx="2" ry="2" />
<text  x="283.82" y="191.5" >intel_pmu_enable_all</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (84 samples, 45.90%)</title><rect x="280.8" y="165" width="541.7" height="15.0" fill="rgb(240,215,19)" rx="2" ry="2" />
<text  x="283.82" y="175.5" >__intel_pmu_enable_all.constprop.23</text>
</g>
<g >
<title>rw_verify_area (2 samples, 1.09%)</title><rect x="222.8" y="357" width="12.9" height="15.0" fill="rgb(228,110,37)" rx="2" ry="2" />
<text  x="225.79" y="367.5" ></text>
</g>
<g >
<title>ctx_resched (84 samples, 45.90%)</title><rect x="280.8" y="213" width="541.7" height="15.0" fill="rgb(205,29,38)" rx="2" ry="2" />
<text  x="283.82" y="223.5" >ctx_resched</text>
</g>
<g >
<title>ioctl (5 samples, 2.73%)</title><rect x="242.1" y="325" width="32.3" height="15.0" fill="rgb(214,80,51)" rx="2" ry="2" />
<text  x="245.13" y="335.5" >io..</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (84 samples, 45.90%)</title><rect x="280.8" y="293" width="541.7" height="15.0" fill="rgb(241,199,43)" rx="2" ry="2" />
<text  x="283.82" y="303.5" >generic_smp_call_function_single_interrupt</text>
</g>
<g >
<title>__vfs_read (13 samples, 7.10%)</title><rect x="93.8" y="357" width="83.9" height="15.0" fill="rgb(247,30,10)" rx="2" ry="2" />
<text  x="96.83" y="367.5" >__vfs_read</text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 2.19%)</title><rect x="1144.9" y="229" width="25.8" height="15.0" fill="rgb(236,139,12)" rx="2" ry="2" />
<text  x="1147.86" y="239.5" >f..</text>
</g>
<g >
<title>start_kernel (6 samples, 3.28%)</title><rect x="1144.9" y="389" width="38.7" height="15.0" fill="rgb(227,126,50)" rx="2" ry="2" />
<text  x="1147.86" y="399.5" >sta..</text>
</g>
<g >
<title>ctx_resched (4 samples, 2.19%)</title><rect x="1106.2" y="197" width="25.8" height="15.0" fill="rgb(237,193,8)" rx="2" ry="2" />
<text  x="1109.17" y="207.5" >c..</text>
</g>
<g >
<title>native_sched_clock (5 samples, 2.73%)</title><rect x="293.7" y="149" width="32.3" height="15.0" fill="rgb(216,1,19)" rx="2" ry="2" />
<text  x="296.72" y="159.5" >na..</text>
</g>
<g >
<title>menu_select (1 samples, 0.55%)</title><rect x="1138.4" y="357" width="6.5" height="15.0" fill="rgb(233,118,9)" rx="2" ry="2" />
<text  x="1141.42" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (135 samples, 73.77%)</title><rect x="274.4" y="405" width="870.5" height="15.0" fill="rgb(229,87,46)" rx="2" ry="2" />
<text  x="277.37" y="415.5" >cpu_startup_entry</text>
</g>
<g >
<title>ctx_resched (4 samples, 2.19%)</title><rect x="248.6" y="101" width="25.8" height="15.0" fill="rgb(214,46,14)" rx="2" ry="2" />
<text  x="251.58" y="111.5" >c..</text>
</g>
<g >
<title>sys_ioctl (5 samples, 2.73%)</title><rect x="242.1" y="277" width="32.3" height="15.0" fill="rgb(252,96,33)" rx="2" ry="2" />
<text  x="245.13" y="287.5" >sy..</text>
</g>
<g >
<title>call_cpuidle (133 samples, 72.68%)</title><rect x="280.8" y="373" width="857.6" height="15.0" fill="rgb(233,86,43)" rx="2" ry="2" />
<text  x="283.82" y="383.5" >call_cpuidle</text>
</g>
<g >
<title>perf_ioctl (5 samples, 2.73%)</title><rect x="242.1" y="245" width="32.3" height="15.0" fill="rgb(208,0,14)" rx="2" ry="2" />
<text  x="245.13" y="255.5" >pe..</text>
</g>
<g >
<title>generic_exec_single (4 samples, 2.19%)</title><rect x="248.6" y="165" width="25.8" height="15.0" fill="rgb(209,170,23)" rx="2" ry="2" />
<text  x="251.58" y="175.5" >g..</text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.55%)</title><rect x="1183.6" y="261" width="6.4" height="15.0" fill="rgb(246,109,21)" rx="2" ry="2" />
<text  x="1186.55" y="271.5" ></text>
</g>
<g >
<title>do_idle (135 samples, 73.77%)</title><rect x="274.4" y="389" width="870.5" height="15.0" fill="rgb(242,92,52)" rx="2" ry="2" />
<text  x="277.37" y="399.5" >do_idle</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.55%)</title><rect x="874.0" y="229" width="6.5" height="15.0" fill="rgb(242,165,23)" rx="2" ry="2" />
<text  x="877.04" y="239.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 2.19%)</title><rect x="1106.2" y="309" width="25.8" height="15.0" fill="rgb(225,119,54)" rx="2" ry="2" />
<text  x="1109.17" y="319.5" >c..</text>
</g>
<g >
<title>swapper (141 samples, 77.05%)</title><rect x="274.4" y="453" width="909.2" height="15.0" fill="rgb(226,108,18)" rx="2" ry="2" />
<text  x="277.37" y="463.5" >swapper</text>
</g>
<g >
<title>_find_next_bit (2 samples, 1.09%)</title><rect x="861.1" y="213" width="12.9" height="15.0" fill="rgb(244,69,20)" rx="2" ry="2" />
<text  x="864.15" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (84 samples, 45.90%)</title><rect x="280.8" y="197" width="541.7" height="15.0" fill="rgb(237,220,23)" rx="2" ry="2" />
<text  x="283.82" y="207.5" >x86_pmu_enable</text>
</g>
<g >
<title>remote_function (4 samples, 2.19%)</title><rect x="1144.9" y="213" width="25.8" height="15.0" fill="rgb(221,123,1)" rx="2" ry="2" />
<text  x="1147.86" y="223.5" >r..</text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.55%)</title><rect x="822.5" y="277" width="6.4" height="15.0" fill="rgb(224,73,18)" rx="2" ry="2" />
<text  x="825.46" y="287.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.55%)</title><rect x="287.3" y="149" width="6.4" height="15.0" fill="rgb(237,8,1)" rx="2" ry="2" />
<text  x="290.27" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (5 samples, 2.73%)</title><rect x="242.1" y="421" width="32.3" height="15.0" fill="rgb(218,212,26)" rx="2" ry="2" />
<text  x="245.13" y="431.5" >__..</text>
</g>
<g >
<title>native_write_msr (3 samples, 1.64%)</title><rect x="1151.3" y="101" width="19.4" height="15.0" fill="rgb(249,155,42)" rx="2" ry="2" />
<text  x="1154.31" y="111.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.55%)</title><rect x="1144.9" y="101" width="6.4" height="15.0" fill="rgb(217,177,48)" rx="2" ry="2" />
<text  x="1147.86" y="111.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (10 samples, 5.46%)</title><rect x="828.9" y="277" width="64.5" height="15.0" fill="rgb(246,126,14)" rx="2" ry="2" />
<text  x="831.91" y="287.5" >tick_no..</text>
</g>
<g >
<title>vfs_read (15 samples, 8.20%)</title><rect x="87.4" y="373" width="96.7" height="15.0" fill="rgb(232,45,9)" rx="2" ry="2" />
<text  x="90.38" y="383.5" >vfs_read</text>
</g>
<g >
<title>event_function_call (5 samples, 2.73%)</title><rect x="242.1" y="197" width="32.3" height="15.0" fill="rgb(218,136,44)" rx="2" ry="2" />
<text  x="245.13" y="207.5" >ev..</text>
</g>
<g >
<title>perf (5 samples, 2.73%)</title><rect x="242.1" y="453" width="32.3" height="15.0" fill="rgb(216,28,11)" rx="2" ry="2" />
<text  x="245.13" y="463.5" >perf</text>
</g>
<g >
<title>ext4_direct_IO (12 samples, 6.56%)</title><rect x="100.3" y="293" width="77.4" height="15.0" fill="rgb(222,113,11)" rx="2" ry="2" />
<text  x="103.27" y="303.5" >ext4_dir..</text>
</g>
<g >
<title>remote_function (4 samples, 2.19%)</title><rect x="1106.2" y="245" width="25.8" height="15.0" fill="rgb(207,19,35)" rx="2" ry="2" />
<text  x="1109.17" y="255.5" >r..</text>
</g>
<g >
<title>native_write_msr (3 samples, 1.64%)</title><rect x="1106.2" y="133" width="19.3" height="15.0" fill="rgb(216,106,35)" rx="2" ry="2" />
<text  x="1109.17" y="143.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 2.19%)</title><rect x="1106.2" y="149" width="25.8" height="15.0" fill="rgb(236,221,47)" rx="2" ry="2" />
<text  x="1109.17" y="159.5" >_..</text>
</g>
<g >
<title>__perf_event_enable (84 samples, 45.90%)</title><rect x="280.8" y="229" width="541.7" height="15.0" fill="rgb(234,211,43)" rx="2" ry="2" />
<text  x="283.82" y="239.5" >__perf_event_enable</text>
</g>
<g >
<title>_perf_event_enable (5 samples, 2.73%)</title><rect x="242.1" y="213" width="32.3" height="15.0" fill="rgb(243,187,5)" rx="2" ry="2" />
<text  x="245.13" y="223.5" >_p..</text>
</g>
<g >
<title>event_function (4 samples, 2.19%)</title><rect x="1106.2" y="229" width="25.8" height="15.0" fill="rgb(243,158,26)" rx="2" ry="2" />
<text  x="1109.17" y="239.5" >e..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.55%)</title><rect x="816.0" y="149" width="6.5" height="15.0" fill="rgb(211,1,36)" rx="2" ry="2" />
<text  x="819.01" y="159.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (4 samples, 2.19%)</title><rect x="848.3" y="229" width="25.7" height="15.0" fill="rgb(252,91,2)" rx="2" ry="2" />
<text  x="851.25" y="239.5" >_..</text>
</g>
<g >
<title>flush_smp_call_function_queue (84 samples, 45.90%)</title><rect x="280.8" y="277" width="541.7" height="15.0" fill="rgb(217,57,48)" rx="2" ry="2" />
<text  x="283.82" y="287.5" >flush_smp_call_function_queue</text>
</g>
<g >
<title>do_idle (6 samples, 3.28%)</title><rect x="1144.9" y="341" width="38.7" height="15.0" fill="rgb(251,77,8)" rx="2" ry="2" />
<text  x="1147.86" y="351.5" >do_..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 2.19%)</title><rect x="248.6" y="85" width="25.8" height="15.0" fill="rgb(223,74,41)" rx="2" ry="2" />
<text  x="251.58" y="95.5" >x..</text>
</g>
<g >
<title>intel_idle (29 samples, 15.85%)</title><rect x="893.4" y="325" width="187.0" height="15.0" fill="rgb(212,130,18)" rx="2" ry="2" />
<text  x="896.39" y="335.5" >intel_idle</text>
</g>
<g >
<title>call_cpuidle (6 samples, 3.28%)</title><rect x="1144.9" y="325" width="38.7" height="15.0" fill="rgb(221,183,32)" rx="2" ry="2" />
<text  x="1147.86" y="335.5" >cal..</text>
</g>
<g >
<title>write (6 samples, 3.28%)</title><rect x="203.4" y="437" width="38.7" height="15.0" fill="rgb(245,93,23)" rx="2" ry="2" />
<text  x="206.44" y="447.5" >write</text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.55%)</title><rect x="229.2" y="293" width="6.5" height="15.0" fill="rgb(252,151,28)" rx="2" ry="2" />
<text  x="232.23" y="303.5" ></text>
</g>
<g >
<title>main (5 samples, 2.73%)</title><rect x="242.1" y="405" width="32.3" height="15.0" fill="rgb(218,127,2)" rx="2" ry="2" />
<text  x="245.13" y="415.5" >main</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 2.19%)</title><rect x="248.6" y="53" width="25.8" height="15.0" fill="rgb(242,26,48)" rx="2" ry="2" />
<text  x="251.58" y="63.5" >_..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.55%)</title><rect x="1183.6" y="277" width="6.4" height="15.0" fill="rgb(232,134,52)" rx="2" ry="2" />
<text  x="1186.55" y="287.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 2.73%)</title><rect x="242.1" y="437" width="32.3" height="15.0" fill="rgb(216,208,45)" rx="2" ry="2" />
<text  x="245.13" y="447.5" >[u..</text>
</g>
<g >
<title>blk_finish_plug (1 samples, 0.55%)</title><rect x="132.5" y="245" width="6.5" height="15.0" fill="rgb(222,25,38)" rx="2" ry="2" />
<text  x="135.51" y="255.5" ></text>
</g>
<g >
<title>secondary_startup_64 (141 samples, 77.05%)</title><rect x="274.4" y="437" width="909.2" height="15.0" fill="rgb(247,98,18)" rx="2" ry="2" />
<text  x="277.37" y="447.5" >secondary_startup_64</text>
</g>
<g >
<title>perf_event_nmi_handler (1 samples, 0.55%)</title><rect x="1125.5" y="133" width="6.5" height="15.0" fill="rgb(246,187,20)" rx="2" ry="2" />
<text  x="1128.52" y="143.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.55%)</title><rect x="248.6" y="37" width="6.4" height="15.0" fill="rgb(249,93,41)" rx="2" ry="2" />
<text  x="251.58" y="47.5" ></text>
</g>
<g >
<title>cpu_startup_entry (6 samples, 3.28%)</title><rect x="1144.9" y="357" width="38.7" height="15.0" fill="rgb(207,47,53)" rx="2" ry="2" />
<text  x="1147.86" y="367.5" >cpu..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.55%)</title><rect x="1183.6" y="293" width="6.4" height="15.0" fill="rgb(227,51,0)" rx="2" ry="2" />
<text  x="1186.55" y="303.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_enter (10 samples, 5.46%)</title><rect x="828.9" y="261" width="64.5" height="15.0" fill="rgb(224,102,52)" rx="2" ry="2" />
<text  x="831.91" y="271.5" >__tick_..</text>
</g>
<g >
<title>native_write_msr (3 samples, 1.64%)</title><rect x="255.0" y="37" width="19.4" height="15.0" fill="rgb(238,168,11)" rx="2" ry="2" />
<text  x="258.03" y="47.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 2.19%)</title><rect x="1144.9" y="245" width="25.8" height="15.0" fill="rgb(210,16,25)" rx="2" ry="2" />
<text  x="1147.86" y="255.5" >g..</text>
</g>
<g >
<title>remote_function (84 samples, 45.90%)</title><rect x="280.8" y="261" width="541.7" height="15.0" fill="rgb(221,137,3)" rx="2" ry="2" />
<text  x="283.82" y="271.5" >remote_function</text>
</g>
<g >
<title>x86_64_start_reservations (6 samples, 3.28%)</title><rect x="1144.9" y="405" width="38.7" height="15.0" fill="rgb(249,214,45)" rx="2" ry="2" />
<text  x="1147.86" y="415.5" >x86..</text>
</g>
<g >
<title>smp_call_function_single (5 samples, 2.73%)</title><rect x="242.1" y="181" width="32.3" height="15.0" fill="rgb(241,207,46)" rx="2" ry="2" />
<text  x="245.13" y="191.5" >sm..</text>
</g>
<g >
<title>do_syscall_64 (18 samples, 9.84%)</title><rect x="68.0" y="405" width="116.1" height="15.0" fill="rgb(250,94,36)" rx="2" ry="2" />
<text  x="71.03" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>[dd] (6 samples, 3.28%)</title><rect x="10.0" y="437" width="38.7" height="15.0" fill="rgb(223,39,34)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >[dd]</text>
</g>
<g >
<title>sys_write (3 samples, 1.64%)</title><rect x="216.3" y="389" width="19.4" height="15.0" fill="rgb(237,103,51)" rx="2" ry="2" />
<text  x="219.34" y="399.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.55%)</title><rect x="177.7" y="325" width="6.4" height="15.0" fill="rgb(221,60,18)" rx="2" ry="2" />
<text  x="180.65" y="335.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.55%)</title><rect x="1183.6" y="341" width="6.4" height="15.0" fill="rgb(224,119,26)" rx="2" ry="2" />
<text  x="1186.55" y="351.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.55%)</title><rect x="229.2" y="325" width="6.5" height="15.0" fill="rgb(213,195,52)" rx="2" ry="2" />
<text  x="232.23" y="335.5" ></text>
</g>
<g >
<title>poll_idle (8 samples, 4.37%)</title><rect x="1080.4" y="325" width="51.6" height="15.0" fill="rgb(215,61,15)" rx="2" ry="2" />
<text  x="1083.38" y="335.5" >poll_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.55%)</title><rect x="1183.6" y="405" width="6.4" height="15.0" fill="rgb(245,155,52)" rx="2" ry="2" />
<text  x="1186.55" y="415.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.55%)</title><rect x="1183.6" y="373" width="6.4" height="15.0" fill="rgb(223,3,16)" rx="2" ry="2" />
<text  x="1186.55" y="383.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.55%)</title><rect x="229.2" y="309" width="6.5" height="15.0" fill="rgb(232,128,5)" rx="2" ry="2" />
<text  x="232.23" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (5 samples, 2.73%)</title><rect x="1144.9" y="293" width="32.2" height="15.0" fill="rgb(248,56,33)" rx="2" ry="2" />
<text  x="1147.86" y="303.5" >cp..</text>
</g>
<g >
<title>sys_read (1 samples, 0.55%)</title><rect x="184.1" y="405" width="6.4" height="15.0" fill="rgb(251,186,42)" rx="2" ry="2" />
<text  x="187.10" y="415.5" ></text>
</g>
<g >
<title>sys_read (15 samples, 8.20%)</title><rect x="87.4" y="389" width="96.7" height="15.0" fill="rgb(249,23,6)" rx="2" ry="2" />
<text  x="90.38" y="399.5" >sys_read</text>
</g>
<g >
<title>do_vfs_ioctl (5 samples, 2.73%)</title><rect x="242.1" y="261" width="32.3" height="15.0" fill="rgb(211,124,45)" rx="2" ry="2" />
<text  x="245.13" y="271.5" >do..</text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 2.19%)</title><rect x="1106.2" y="181" width="25.8" height="15.0" fill="rgb(228,61,54)" rx="2" ry="2" />
<text  x="1109.17" y="191.5" >x..</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 2.19%)</title><rect x="1106.2" y="277" width="25.8" height="15.0" fill="rgb(226,137,26)" rx="2" ry="2" />
<text  x="1109.17" y="287.5" >g..</text>
</g>
<g >
<title>get_next_timer_interrupt (9 samples, 4.92%)</title><rect x="828.9" y="245" width="58.0" height="15.0" fill="rgb(229,222,8)" rx="2" ry="2" />
<text  x="831.91" y="255.5" >get_ne..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 2.73%)</title><rect x="242.1" y="309" width="32.3" height="15.0" fill="rgb(207,3,4)" rx="2" ry="2" />
<text  x="245.13" y="319.5" >en..</text>
</g>
<g >
<title>start_secondary (135 samples, 73.77%)</title><rect x="274.4" y="421" width="870.5" height="15.0" fill="rgb(243,159,28)" rx="2" ry="2" />
<text  x="277.37" y="431.5" >start_secondary</text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.55%)</title><rect x="139.0" y="229" width="6.4" height="15.0" fill="rgb(248,66,41)" rx="2" ry="2" />
<text  x="141.96" y="239.5" ></text>
</g>
<g >
<title>run_builtin (5 samples, 2.73%)</title><rect x="242.1" y="373" width="32.3" height="15.0" fill="rgb(211,212,29)" rx="2" ry="2" />
<text  x="245.13" y="383.5" >ru..</text>
</g>
<g >
<title>irq_exit (11 samples, 6.01%)</title><rect x="822.5" y="293" width="70.9" height="15.0" fill="rgb(252,114,14)" rx="2" ry="2" />
<text  x="825.46" y="303.5" >irq_exit</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 2.73%)</title><rect x="242.1" y="293" width="32.3" height="15.0" fill="rgb(244,85,0)" rx="2" ry="2" />
<text  x="245.13" y="303.5" >do..</text>
</g>
<g >
<title>__entry_trampoline_start (3 samples, 1.64%)</title><rect x="48.7" y="421" width="19.3" height="15.0" fill="rgb(244,138,20)" rx="2" ry="2" />
<text  x="51.69" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (132 samples, 72.13%)</title><rect x="280.8" y="341" width="851.2" height="15.0" fill="rgb(230,9,32)" rx="2" ry="2" />
<text  x="283.82" y="351.5" >cpuidle_enter_state</text>
</g>
<g >
<title>read (24 samples, 13.11%)</title><rect x="48.7" y="437" width="154.7" height="15.0" fill="rgb(227,174,22)" rx="2" ry="2" />
<text  x="51.69" y="447.5" >read</text>
</g>
</g>
</svg>
